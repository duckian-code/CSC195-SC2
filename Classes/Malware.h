//
// Created by anabelle on 22/05/25.
//

#ifndef MALWARE_H
#define MALWARE_H
#include "Software.h"

using namespace std;

class Malware : public Software {
public:
    Malware(string name, float size): Software(name, size) {
        computers_infected = 0;
        danger = 0;
    } ;
    // these two are virtuals overriden so I do not need to dynamic cast
    void AddComputersInfected(int computers_infected) override { this->computers_infected += computers_infected;};
    void SetDanger(float danger) override { this->danger = danger;};

    void Read(std::ostream& ostream, std::istream& istream) override;
    void Write(std::ostream& ostream) override;
    eType GetType() override { return eType::MALWARE; };
protected:
    int computers_infected;
    float danger; // out of 5 stars
};


#endif //MALWARE_H
